# vim: tabstop=2:softtabstop=2:shiftwidth=2:

- [x] New print-retry strategy:
  keep retrying until a new value is available.
  Something like:

    (define (loop old-retry)
      (define val (thread-receive))
      (when old-retry
        (kill-thread old-retry))
      (define new-retry (thread (thunk (retry val))))
      (loop new-retry))

- [ ] Handle notify exception:

    $ pista-sensor-weather-gov -n -i 1800 KJFK > /home/siraaj/.pista-in/pista-sensor-weather-gov; notify-send -u critical 'pista-sensor exited!' "pista-sensor-weather-gov\n$?"
    GError-message: contract violation
      expected: GError?
      given: #<cpointer>
      context...:
       GError-message
       /home/siraaj/.racket/7.9/pkgs/libnotify/libnotify.rkt:72:4: show method in notification%
       /usr/share/racket/pkgs/typed-racket-lib/typed-racket/utils/simple-result-arrow.rkt:39:12
       /home/siraaj/proj/pub/pista-sensors/pista-sensor-weather-gov.rkt:106:2: loop
       /usr/share/racket/collects/racket/contract/private/arrow-higher-order.rkt:375:33
       '|#%mzc:pista-sensor-weather-gov(main)|: [running body]

- [ ] Handle crashed threads. Perhaps something OTP-inspired?

- [ ] Grab power updates from D-Bus, rather than "upower --monitor-detail"
  See: https://docs.racket-lang.org/dbus/

- [ ] Abstract weather and unify gov and openweather as backend options for
  this abstract weather sensor.

- [ ] Microfone in-use sensor. See: `notes/microphone-use.txt`
